/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package udang;
import java.awt.event.ActionEvent;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Asus
 */
public class gudang extends javax.swing.JFrame {
    private String username;
    private String sql;
    private PreparedStatement stat;
    /**
     * Creates new form gudang
     */
    public gudang() {
        initComponents();
        this.TampilData();
        this.tampil_combo();
    }
private DefaultTableModel DftTblModel_barang;
private String SQL;
private int userId; 
public void TampilData() {
        DftTblModel_barang = new DefaultTableModel();
        DftTblModel_barang.addColumn("kd.barang");
        DftTblModel_barang.addColumn("nm.barang");
        DftTblModel_barang.addColumn("expired");
        DftTblModel_barang.addColumn("jumlah");
        DftTblModel_barang.addColumn("satuan");
        DftTblModel_barang.addColumn("harga");
        tabel.setModel(DftTblModel_barang);
        Connection conn = koneksi.getConnection();
        try {
            java.sql.Statement stmt = conn.createStatement();
            SQL = "select * from gudang ORDER BY kd_barang DESC";
            java.sql.ResultSet res = stmt.executeQuery(SQL);
            while (res.next()) {
                DftTblModel_barang.addRow(new Object[]{
                    res.getString("kd_barang"),
                    res.getString("nm_barang"),
                    res.getString("expired"),
                    res.getString("jumlah"),
                    res.getString("satuan"),
                    res.getString("harga"),
                });
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

public void tampil_combo() {
        try{
            String sql = "select * from gudang";
            java.sql.Connection conn = koneksi.getConnection();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                String satuann = rs.getString("satuan");
                satuan.addItem(satuann);
                if (satuann.equals(satuan.getSelectedItem())){
                }
            }
            
            satuan.addActionListener((ActionEvent e) -> {
                String selectId = (String) satuan.getSelectedItem();
                
                 String query = "SELECT * FROM gudang WHERE satuan = '" + selectId + "'";
                try {
                    java.sql.Statement stmt2 = conn.createStatement();
                    java.sql.ResultSet res2 = stmt2.executeQuery(query);
                    if (res2.next()) {
                    }
                } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            });
        }catch (SQLException e){
            System.out.println(e.getMessage());
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        kode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jumlah = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        satuan = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        tambah = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        cari = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        userr = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel5.setText("Kd.barang");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(227, 49, 54, 16);
        getContentPane().add(kode);
        kode.setBounds(227, 71, 177, 22);

        jLabel6.setText("Nm.barang");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(227, 105, 60, 16);
        getContentPane().add(nama);
        nama.setBounds(227, 127, 177, 22);

        jLabel7.setText("Expired date");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(227, 161, 65, 16);
        getContentPane().add(date);
        date.setBounds(227, 189, 177, 22);

        jLabel8.setText("Jumlah barang");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(484, 49, 78, 16);
        getContentPane().add(jumlah);
        jumlah.setBounds(484, 71, 195, 22);

        jLabel9.setText("Satuan");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(484, 105, 36, 16);

        getContentPane().add(satuan);
        satuan.setBounds(484, 127, 195, 22);

        jLabel10.setText("Harga satuan");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(484, 161, 70, 16);
        getContentPane().add(harga);
        harga.setBounds(483, 189, 196, 22);

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        getContentPane().add(tambah);
        tambah.setBounds(227, 239, 73, 22);

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit);
        edit.setBounds(318, 239, 72, 22);

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus);
        hapus.setBounds(402, 239, 72, 22);

        jLabel11.setText("Tabel stok barang");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(227, 294, 93, 16);
        getContentPane().add(jTextField5);
        jTextField5.setBounds(420, 291, 171, 22);

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        getContentPane().add(cari);
        cari.setBounds(603, 291, 72, 22);

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(230, 330, 450, 150);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("GUDANG");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(33, 42, 158, 48);

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\buat netbeans\\udang\\src\\udang\\img\\gudang.png")); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(59, 168, 100, 100);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Kelola Barang");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(50, 320, 140, 30);

        logout.setBackground(new java.awt.Color(204, 204, 255));
        logout.setText("logout");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel2.add(logout);
        logout.setBounds(70, 400, 72, 22);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 220, 500);

        userr.setText("yuji");
        getContentPane().add(userr);
        userr.setBounds(671, 10, 0, 22);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
       // TODO add your handling code here:
   try {
        java.sql.Connection conn = koneksi.getConnection();
        PreparedStatement stmt = conn.prepareStatement("INSERT INTO gudang(kd_barang, nm_barang, expired, jumlah, satuan, harga) VALUES(?,?,?,?,?,?)");
        stmt.setString(1, kode.getText());
        stmt.setString(2, nama.getText());
        
        // Convert JDateChooser date to java.sql.Date
        java.util.Date selectedDate = date.getDate();
        if (selectedDate != null) {
            java.sql.Date sqlDate = new java.sql.Date(selectedDate.getTime());
            stmt.setDate(3, sqlDate);
        } else {
            stmt.setNull(3, java.sql.Types.DATE); // Set the date field to NULL
        }
        
        stmt.setString(4, jumlah.getText());
        stmt.setString(5, (String) satuan.getSelectedItem());
        stmt.setString(6, harga.getText());

        stmt.executeUpdate();
        
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Pesan", JOptionPane.INFORMATION_MESSAGE);
        TampilData(); // Refresh the table with updated data
        tampil_combo();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    }//GEN-LAST:event_tambahActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
                    String searchTerm = jTextField5.getText().trim();
    if (!searchTerm.isEmpty()) {
        TampilData(searchTerm);
    } else {
        TampilData(); // Show all data if the search term is empty
    }
}

public void TampilData(String searchTerm) {
    // Clear existing data from the table
    DftTblModel_barang.setRowCount(0);

    Connection conn = koneksi.getConnection();
    try {
        java.sql.Statement stmt = conn.createStatement();
        SQL = "SELECT * FROM gudang WHERE nm_barang LIKE '%" + searchTerm + "%'";
        java.sql.ResultSet res = stmt.executeQuery(SQL);
        while (res.next()) {
            DftTblModel_barang.addRow(new Object[]{
                res.getString("kd_barang"),
                res.getString("nm_barang"),
                res.getString("expired"),
                res.getString("jumlah"),
                res.getString("satuan"),
                res.getString("harga"),
            });
        }
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    }//GEN-LAST:event_cariActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
            int selectedRowIndex = tabel.getSelectedRow();
    
    if (selectedRowIndex >= 0) {
        String kdBarang = DftTblModel_barang.getValueAt(selectedRowIndex, 0).toString();
        String nmBarang = DftTblModel_barang.getValueAt(selectedRowIndex, 1).toString();
        String expired = DftTblModel_barang.getValueAt(selectedRowIndex, 2).toString();
        String jumlahBarang = DftTblModel_barang.getValueAt(selectedRowIndex, 3).toString();
        String selectedSatuan = DftTblModel_barang.getValueAt(selectedRowIndex, 4).toString();
        String hargaSatuan = DftTblModel_barang.getValueAt(selectedRowIndex, 5).toString();
        
        kode.setText(kdBarang);
        nama.setText(nmBarang);
        
        // Set the date from the table to the JDateChooser
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDateTime dateTime = LocalDateTime.parse(expired, formatter);
            date.setDate(java.sql.Date.valueOf(dateTime.toLocalDate()));
        } catch (Exception e) {
            // Handle date parsing error
        }
        
        jumlah.setText(jumlahBarang);
        satuan.setSelectedItem(selectedSatuan);
        harga.setText(hargaSatuan);
    }
    }//GEN-LAST:event_tabelMouseClicked

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    try {
        int selectedRowIndex = tabel.getSelectedRow();
        
        if (selectedRowIndex >= 0) {
            String kdBarang = kode.getText();
            String nmBarang = nama.getText();
            java.util.Date selectedDate = date.getDate();
            java.sql.Date expiredDate = null;
            if (selectedDate != null) {
                expiredDate = new java.sql.Date(selectedDate.getTime());
            }
            String jumlahBarang = jumlah.getText();
            String selectedSatuan = (String) satuan.getSelectedItem();
            String hargaSatuan = harga.getText();
            
            // Update the selected row in the table
            DftTblModel_barang.setValueAt(kdBarang, selectedRowIndex, 0);
            DftTblModel_barang.setValueAt(nmBarang, selectedRowIndex, 1);
            DftTblModel_barang.setValueAt(expiredDate, selectedRowIndex, 2);
            DftTblModel_barang.setValueAt(jumlahBarang, selectedRowIndex, 3);
            DftTblModel_barang.setValueAt(selectedSatuan, selectedRowIndex, 4);
            DftTblModel_barang.setValueAt(hargaSatuan, selectedRowIndex, 5);
            
            // Update the corresponding row in the database
            Connection conn = koneksi.getConnection();
            String updateSQL = "UPDATE gudang SET nm_barang=?, expired=?, jumlah=?, satuan=?, harga=? WHERE kd_barang=?";
            PreparedStatement updateStmt = conn.prepareStatement(updateSQL);
            updateStmt.setString(1, nmBarang);
            updateStmt.setDate(2, expiredDate);
            updateStmt.setString(3, jumlahBarang);
            updateStmt.setString(4, selectedSatuan);
            updateStmt.setString(5, hargaSatuan);
            updateStmt.setString(6, kdBarang);
            updateStmt.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Data berhasil diubah", "Pesan", JOptionPane.INFORMATION_MESSAGE);
            
            // Clear the input fields
            kode.setText("");
            nama.setText("");
            date.setDate(null);
            jumlah.setText("");
            satuan.setSelectedIndex(0);
            harga.setText("");
            
            // Refresh the table with updated data
            TampilData();
            tampil_combo();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan diubah", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    }//GEN-LAST:event_editActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
           try {
        int selectedRowIndex = tabel.getSelectedRow();

        if (selectedRowIndex >= 0) {
            String kdBarang = kode.getText();

            // Remove the selected row from the table model
            DftTblModel_barang.removeRow(selectedRowIndex);

            // Delete the corresponding row in the database
            Connection conn = koneksi.getConnection();
            String deleteSQL = "DELETE FROM gudang WHERE kd_barang=?";
            PreparedStatement deleteStmt = conn.prepareStatement(deleteSQL);
            deleteStmt.setString(1, kdBarang);
            deleteStmt.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data berhasil dihapus", "Pesan", JOptionPane.INFORMATION_MESSAGE);

            // Clear the input fields
            kode.setText("");
            nama.setText("");
            date.setDate(null);
            jumlah.setText("");
            satuan.setSelectedIndex(0);
            harga.setText("");

            tampil_combo();
        } else {
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    }
    }//GEN-LAST:event_hapusActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        // TODO add your handling code here:
try {
    login halaman = new login();
    halaman.setVisible(true);
    Connection conn = koneksi.getConnection();
    
    String insertSQL = "INSERT INTO login_activity (id_log, kelas, id, tanggal, jam, aktivitas) VALUES (?, ?, ?, ?, ?, ?)";

    // Retrieve user data from login table with kelas "gudang"
    String selectUserSQL = "SELECT * FROM login WHERE username = ? AND kelas = ?";
    try (PreparedStatement selectUserStmt = conn.prepareStatement(selectUserSQL)) {
        selectUserStmt.setString(1, userr.getText()); // Get the username from your input field
        selectUserStmt.setString(2, "gudang"); // User must have "gudang" role
        
        ResultSet userRs = selectUserStmt.executeQuery();
        if (userRs.next()) {
            int userId = userRs.getInt("id"); // Get the id from the login table
            
            try (PreparedStatement insertStmt = conn.prepareStatement(insertSQL)) {
                // Set other parameters
                insertStmt.setInt(1, 0); // Replace with actual idLog value
                insertStmt.setString(2, "gudang"); // Replace with actual kelas field
                insertStmt.setInt(3, userId); // Use the retrieved userId value
                insertStmt.setDate(4, java.sql.Date.valueOf(LocalDate.now())); // Current date
                insertStmt.setTime(5, java.sql.Time.valueOf(LocalTime.now())); // Current time
                insertStmt.setString(6, "Logout"); // Replace with actual activity description
                // Execute the query
                insertStmt.executeUpdate();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Username atau sandi salah");
        }
    }
} catch (SQLException e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gudang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gudang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JButton edit;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField harga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jumlah;
    private javax.swing.JTextField kode;
    private javax.swing.JButton logout;
    private javax.swing.JTextField nama;
    private javax.swing.JComboBox<String> satuan;
    private javax.swing.JTable tabel;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField userr;
    // End of variables declaration//GEN-END:variables
}
